-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from ParGramar.y
-----------------------------------------------------------------------------


rule 25 is unused
rule 26 is unused
rule 30 is unused
rule 31 is unused
rule 32 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> Type Item ';'                            (6)
	ListTopDef -> TopDef                               (7)
	ListTopDef -> TopDef ListTopDef                    (8)
	Arg -> Type Ident                                  (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Block -> '{' ListStmt '}'                          (13)
	ListStmt ->                                        (14)
	ListStmt -> Stmt ListStmt                          (15)
	Stmt -> ';'                                        (16)
	Stmt -> Type Item ';'                              (17)
	Stmt -> Ident '=' Expr ';'                         (18)
	Stmt -> 'return' Expr ';'                          (19)
	Stmt -> 'if' '(' Expr ')' Block                    (20)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (21)
	Stmt -> 'while' '(' Expr ')' Block                 (22)
	Stmt -> 'for' Ident '=' '(' Expr ')' 'to' '(' Expr ')' Block   (23)
	Item -> Ident '=' Expr                             (24)
	ListItem -> Item                                   (25)
	ListItem -> Item ',' ListItem                      (26)
	Type -> 'int'                                      (27)
	Type -> 'string'                                   (28)
	Type -> 'boolean'                                  (29)
	ListType ->                                        (30)
	ListType -> Type                                   (31)
	ListType -> Type ',' ListType                      (32)
	Expr6 -> Ident                                     (33)
	Expr6 -> Integer                                   (34)
	Expr6 -> 'true'                                    (35)
	Expr6 -> 'false'                                   (36)
	Expr6 -> Ident '(' ListExpr ')'                    (37)
	Expr6 -> String                                    (38)
	Expr6 -> '(' Expr ')'                              (39)
	Expr5 -> '-' Expr6                                 (40)
	Expr5 -> '!' Expr6                                 (41)
	Expr5 -> Expr6                                     (42)
	Expr4 -> Expr4 MulOp Expr5                         (43)
	Expr4 -> Expr5                                     (44)
	Expr3 -> Expr3 AddOp Expr4                         (45)
	Expr3 -> Expr4                                     (46)
	Expr2 -> Expr2 RelOp Expr3                         (47)
	Expr2 -> Expr3                                     (48)
	Expr1 -> Expr2 '&&' Expr1                          (49)
	Expr1 -> Expr2                                     (50)
	Expr -> Expr1 '||' Expr                            (51)
	Expr -> Expr1                                      (52)
	ListExpr ->                                        (53)
	ListExpr -> Expr                                   (54)
	ListExpr -> Expr ',' ListExpr                      (55)
	AddOp -> '+'                                       (56)
	AddOp -> '-'                                       (57)
	MulOp -> '*'                                       (58)
	MulOp -> '/'                                       (59)
	MulOp -> '%'                                       (60)
	RelOp -> '<'                                       (61)
	RelOp -> '<='                                      (62)
	RelOp -> '>'                                       (63)
	RelOp -> '>='                                      (64)
	RelOp -> '=='                                      (65)
	RelOp -> '!='                                      (66)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	','            { PT _ (TS _ 9) }
	'-'            { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'=='           { PT _ (TS _ 16) }
	'>'            { PT _ (TS _ 17) }
	'>='           { PT _ (TS _ 18) }
	'boolean'      { PT _ (TS _ 19) }
	'else'         { PT _ (TS _ 20) }
	'false'        { PT _ (TS _ 21) }
	'for'          { PT _ (TS _ 22) }
	'if'           { PT _ (TS _ 23) }
	'int'          { PT _ (TS _ 24) }
	'return'       { PT _ (TS _ 25) }
	'string'       { PT _ (TS _ 26) }
	'to'           { PT _ (TS _ 27) }
	'true'         { PT _ (TS _ 28) }
	'while'        { PT _ (TS _ 29) }
	'{'            { PT _ (TS _ 30) }
	'||'           { PT _ (TS _ 31) }
	'}'            { PT _ (TS _ 32) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6
	ListTopDef      rules 7, 8
	Arg             rule  9
	ListArg         rules 10, 11, 12
	Block           rule  13
	ListStmt        rules 14, 15
	Stmt            rules 16, 17, 18, 19, 20, 21, 22, 23
	Item            rule  24
	ListItem        rules 25, 26
	Type            rules 27, 28, 29
	ListType        rules 30, 31, 32
	Expr6           rules 33, 34, 35, 36, 37, 38, 39
	Expr5           rules 40, 41, 42
	Expr4           rules 43, 44
	Expr3           rules 45, 46
	Expr2           rules 47, 48
	Expr1           rules 49, 50
	Expr            rules 51, 52
	ListExpr        rules 53, 54, 55
	AddOp           rules 56, 57
	MulOp           rules 58, 59, 60
	RelOp           rules 61, 62, 63, 64, 65, 66

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 7)
	ListTopDef -> TopDef . ListTopDef                   (rule 8)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	%eof           reduce using rule 7

	TopDef         goto state 4
	ListTopDef     goto state 12
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	TopDef -> Type . Item ';'                           (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 10
	Item           goto state 11

State 7

	Type -> 'boolean' .                                 (rule 29)

	L_Ident        reduce using rule 29


State 8

	Type -> 'int' .                                     (rule 27)

	L_Ident        reduce using rule 27


State 9

	Type -> 'string' .                                  (rule 28)

	L_Ident        reduce using rule 28


State 10

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)
	Item -> Ident . '=' Expr                            (rule 24)

	'('            shift, and enter state 14
	'='            shift, and enter state 15


State 11

	TopDef -> Type Item . ';'                           (rule 6)

	';'            shift, and enter state 13


State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 8)

	%eof           reduce using rule 8


State 13

	TopDef -> Type Item ';' .                           (rule 6)

	'boolean'      reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	%eof           reduce using rule 6


State 14

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Arg            goto state 33
	ListArg        goto state 34
	Type           goto state 35

State 15

	Item -> Ident '=' . Expr                            (rule 24)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 25

State 16

	Expr6 -> Ident .                                    (rule 33)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 37)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&&'           reduce using rule 33
	'('            shift, and enter state 58
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'||'           reduce using rule 33


State 17

	Expr6 -> Integer .                                  (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'||'           reduce using rule 34


State 18

	Expr6 -> String .                                   (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 19

	Expr5 -> Expr6 .                                    (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 20

	Expr4 -> Expr5 .                                    (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 21

	Expr4 -> Expr4 . MulOp Expr5                        (rule 43)
	Expr3 -> Expr4 .                                    (rule 46)

	'!='           reduce using rule 46
	'%'            shift, and enter state 55
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            shift, and enter state 56
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            shift, and enter state 57
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46

	MulOp          goto state 54

State 22

	Expr3 -> Expr3 . AddOp Expr4                        (rule 45)
	Expr2 -> Expr3 .                                    (rule 48)

	'!='           reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'+'            shift, and enter state 52
	','            reduce using rule 48
	'-'            shift, and enter state 53
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48

	AddOp          goto state 51

State 23

	Expr2 -> Expr2 . RelOp Expr3                        (rule 47)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 49)
	Expr1 -> Expr2 .                                    (rule 50)

	'!='           shift, and enter state 44
	'&&'           shift, and enter state 45
	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	'<'            shift, and enter state 46
	'<='           shift, and enter state 47
	'=='           shift, and enter state 48
	'>'            shift, and enter state 49
	'>='           shift, and enter state 50
	'||'           reduce using rule 50

	RelOp          goto state 43

State 24

	Expr -> Expr1 . '||' Expr                           (rule 51)
	Expr -> Expr1 .                                     (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52
	'||'           shift, and enter state 42


State 25

	Item -> Ident '=' Expr .                            (rule 24)

	';'            reduce using rule 24


State 26

	Expr5 -> '!' . Expr6                                (rule 41)

	'('            shift, and enter state 27
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 41

State 27

	Expr6 -> '(' . Expr ')'                             (rule 39)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 40

State 28

	Expr5 -> '-' . Expr6                                (rule 40)

	'('            shift, and enter state 27
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 39

State 29

	Expr6 -> 'false' .                                  (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'||'           reduce using rule 36


State 30

	Expr6 -> 'true' .                                   (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'||'           reduce using rule 35


State 31

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 32

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 33

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 38


State 34

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 37


State 35

	Arg -> Type . Ident                                 (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 36

State 36

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 37

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 69

	Block          goto state 68

State 38

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Arg            goto state 33
	ListArg        goto state 67
	Type           goto state 35

State 39

	Expr5 -> '-' Expr6 .                                (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 40

	Expr6 -> '(' Expr . ')'                             (rule 39)

	')'            shift, and enter state 66


State 41

	Expr5 -> '!' Expr6 .                                (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 42

	Expr -> Expr1 '||' . Expr                           (rule 51)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 65

State 43

	Expr2 -> Expr2 RelOp . Expr3                        (rule 47)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 64

State 44

	RelOp -> '!=' .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 45

	Expr1 -> Expr2 '&&' . Expr1                         (rule 49)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 63

State 46

	RelOp -> '<' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 47

	RelOp -> '<=' .                                     (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 48

	RelOp -> '==' .                                     (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 49

	RelOp -> '>' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 50

	RelOp -> '>=' .                                     (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 51

	Expr3 -> Expr3 AddOp . Expr4                        (rule 45)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 62

State 52

	AddOp -> '+' .                                      (rule 56)

	'!'            reduce using rule 56
	'('            reduce using rule 56
	'-'            reduce using rule 56
	'false'        reduce using rule 56
	'true'         reduce using rule 56
	L_Ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56


State 53

	AddOp -> '-' .                                      (rule 57)

	'!'            reduce using rule 57
	'('            reduce using rule 57
	'-'            reduce using rule 57
	'false'        reduce using rule 57
	'true'         reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 54

	Expr4 -> Expr4 MulOp . Expr5                        (rule 43)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 61

State 55

	MulOp -> '%' .                                      (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'false'        reduce using rule 60
	'true'         reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 56

	MulOp -> '*' .                                      (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'-'            reduce using rule 58
	'false'        reduce using rule 58
	'true'         reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 57

	MulOp -> '/' .                                      (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'-'            reduce using rule 59
	'false'        reduce using rule 59
	'true'         reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 58

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 37)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	')'            reduce using rule 53
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 59
	ListExpr       goto state 60

State 59

	ListExpr -> Expr .                                  (rule 54)
	ListExpr -> Expr . ',' ListExpr                     (rule 55)

	')'            reduce using rule 54
	','            shift, and enter state 80


State 60

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 37)

	')'            shift, and enter state 79


State 61

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 62

	Expr4 -> Expr4 . MulOp Expr5                        (rule 43)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 45)

	'!='           reduce using rule 45
	'%'            shift, and enter state 55
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            shift, and enter state 56
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            shift, and enter state 57
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45

	MulOp          goto state 54

State 63

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	'||'           reduce using rule 49


State 64

	Expr3 -> Expr3 . AddOp Expr4                        (rule 45)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 47)

	'!='           reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'+'            shift, and enter state 52
	','            reduce using rule 47
	'-'            shift, and enter state 53
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47

	AddOp          goto state 51

State 65

	Expr -> Expr1 '||' Expr .                           (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51


State 66

	Expr6 -> '(' Expr ')' .                             (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 67

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 68

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	%eof           reduce using rule 5


State 69

	Block -> '{' . ListStmt '}'                         (rule 13)

	';'            shift, and enter state 74
	'boolean'      shift, and enter state 7
	'for'          shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 8
	'return'       shift, and enter state 77
	'string'       shift, and enter state 9
	'while'        shift, and enter state 78
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2

	Ident          goto state 70
	ListStmt       goto state 71
	Stmt           goto state 72
	Type           goto state 73

State 70

	Stmt -> Ident . '=' Expr ';'                        (rule 18)

	'='            shift, and enter state 90


State 71

	Block -> '{' ListStmt . '}'                         (rule 13)

	'}'            shift, and enter state 89


State 72

	ListStmt -> Stmt . ListStmt                         (rule 15)

	';'            shift, and enter state 74
	'boolean'      shift, and enter state 7
	'for'          shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 8
	'return'       shift, and enter state 77
	'string'       shift, and enter state 9
	'while'        shift, and enter state 78
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2

	Ident          goto state 70
	ListStmt       goto state 88
	Stmt           goto state 72
	Type           goto state 73

State 73

	Stmt -> Type . Item ';'                             (rule 17)

	L_Ident        shift, and enter state 2

	Ident          goto state 86
	Item           goto state 87

State 74

	Stmt -> ';' .                                       (rule 16)

	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'while'        reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16


State 75

	Stmt -> 'for' . Ident '=' '(' Expr ')' 'to' '(' Expr ')' Block    (rule 23)

	L_Ident        shift, and enter state 2

	Ident          goto state 85

State 76

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 20)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 21)

	'('            shift, and enter state 84


State 77

	Stmt -> 'return' . Expr ';'                         (rule 19)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 83

State 78

	Stmt -> 'while' . '(' Expr ')' Block                (rule 22)

	'('            shift, and enter state 82


State 79

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37


State 80

	ListExpr -> Expr ',' . ListExpr                     (rule 55)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	')'            reduce using rule 53
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 59
	ListExpr       goto state 81

State 81

	ListExpr -> Expr ',' ListExpr .                     (rule 55)

	')'            reduce using rule 55


State 82

	Stmt -> 'while' '(' . Expr ')' Block                (rule 22)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 96

State 83

	Stmt -> 'return' Expr . ';'                         (rule 19)

	';'            shift, and enter state 95


State 84

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 20)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 21)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 94

State 85

	Stmt -> 'for' Ident . '=' '(' Expr ')' 'to' '(' Expr ')' Block    (rule 23)

	'='            shift, and enter state 93


State 86

	Item -> Ident . '=' Expr                            (rule 24)

	'='            shift, and enter state 15


State 87

	Stmt -> Type Item . ';'                             (rule 17)

	';'            shift, and enter state 92


State 88

	ListStmt -> Stmt ListStmt .                         (rule 15)

	'}'            reduce using rule 15


State 89

	Block -> '{' ListStmt '}' .                         (rule 13)

	';'            reduce using rule 13
	'boolean'      reduce using rule 13
	'else'         reduce using rule 13
	'for'          reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'while'        reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	%eof           reduce using rule 13


State 90

	Stmt -> Ident '=' . Expr ';'                        (rule 18)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 91

State 91

	Stmt -> Ident '=' Expr . ';'                        (rule 18)

	';'            shift, and enter state 100


State 92

	Stmt -> Type Item ';' .                             (rule 17)

	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'while'        reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17


State 93

	Stmt -> 'for' Ident '=' . '(' Expr ')' 'to' '(' Expr ')' Block    (rule 23)

	'('            shift, and enter state 99


State 94

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 20)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 21)

	')'            shift, and enter state 98


State 95

	Stmt -> 'return' Expr ';' .                         (rule 19)

	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'while'        reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19


State 96

	Stmt -> 'while' '(' Expr . ')' Block                (rule 22)

	')'            shift, and enter state 97


State 97

	Stmt -> 'while' '(' Expr ')' . Block                (rule 22)

	'{'            shift, and enter state 69

	Block          goto state 103

State 98

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 20)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 21)

	'{'            shift, and enter state 69

	Block          goto state 102

State 99

	Stmt -> 'for' Ident '=' '(' . Expr ')' 'to' '(' Expr ')' Block    (rule 23)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 101

State 100

	Stmt -> Ident '=' Expr ';' .                        (rule 18)

	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'while'        reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18


State 101

	Stmt -> 'for' Ident '=' '(' Expr . ')' 'to' '(' Expr ')' Block    (rule 23)

	')'            shift, and enter state 105


State 102

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 20)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 21)

	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'else'         shift, and enter state 104
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'while'        reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20


State 103

	Stmt -> 'while' '(' Expr ')' Block .                (rule 22)

	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'while'        reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22


State 104

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 21)

	'{'            shift, and enter state 69

	Block          goto state 107

State 105

	Stmt -> 'for' Ident '=' '(' Expr ')' . 'to' '(' Expr ')' Block    (rule 23)

	'to'           shift, and enter state 106


State 106

	Stmt -> 'for' Ident '=' '(' Expr ')' 'to' . '(' Expr ')' Block    (rule 23)

	'('            shift, and enter state 108


State 107

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 21)

	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'while'        reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21


State 108

	Stmt -> 'for' Ident '=' '(' Expr ')' 'to' '(' . Expr ')' Block    (rule 23)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 109

State 109

	Stmt -> 'for' Ident '=' '(' Expr ')' 'to' '(' Expr . ')' Block    (rule 23)

	')'            shift, and enter state 110


State 110

	Stmt -> 'for' Ident '=' '(' Expr ')' 'to' '(' Expr ')' . Block    (rule 23)

	'{'            shift, and enter state 69

	Block          goto state 111

State 111

	Stmt -> 'for' Ident '=' '(' Expr ')' 'to' '(' Expr ')' Block .    (rule 23)

	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'while'        reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 67
Number of terminals: 35
Number of non-terminals: 27
Number of states: 112
